/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Demo, DemoInterface } from "../../../contracts/demo.sol/Demo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "airnodeRrpAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "airnodeCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "airnodeRrp",
    outputs: [
      {
        internalType: "contract IAirnodeRrpV0",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "airnode",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "endpointId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "sponsorWallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
    ],
    name: "callTheAirnode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fulfilledData",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "incomingFulfillments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161063338038061063383398101604081905261002f9161009d565b6001600160a01b0381166080819052604051632b77c09f60e21b81523060048201526001602482015282919063addf027c90604401600060405180830381600087803b15801561007e57600080fd5b505af1158015610092573d6000803e3d6000fd5b5050505050506100cd565b6000602082840312156100af57600080fd5b81516001600160a01b03811681146100c657600080fd5b9392505050565b60805161053e6100f56000396000818160b901528181610153015261020d015261053e6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806371bab6661161005057806371bab666146100b4578063d7aaa24a146100f3578063dd2ae83f1461010657600080fd5b8063406c6d6c1461006c5780634f7d51001461009f575b600080fd5b61008c61007a366004610317565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100b26100ad366004610395565b610139565b005b6100db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610096565b6100b2610101366004610414565b610202565b610129610114366004610317565b60006020819052908152604090205460ff1681565b6040519015158152602001610096565b604051636e6be03f60e01b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e6be03f9061019d908a908a908a908a903090636bd5512560e11b908c908c90600401610460565b6020604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e091906104ef565b6000908152602081905260409020805460ff1916600117905550505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461027f5760405162461bcd60e51b815260206004820152601660248201527f43616c6c6572206e6f74204169726e6f6465205252500000000000000000000060448201526064015b60405180910390fd5b60008381526020819052604090205460ff166102dd5760405162461bcd60e51b815260206004820152601460248201527f4e6f20737563682072657175657374206d6164650000000000000000000000006044820152606401610276565b6000838152602081905260408120805460ff191690556102ff82840184610317565b60009485526001602052604090942093909355505050565b60006020828403121561032957600080fd5b5035919050565b80356001600160a01b038116811461034757600080fd5b919050565b60008083601f84011261035e57600080fd5b50813567ffffffffffffffff81111561037657600080fd5b60208301915083602082850101111561038e57600080fd5b9250929050565b60008060008060008060a087890312156103ae57600080fd5b6103b787610330565b9550602087013594506103cc60408801610330565b93506103da60608801610330565b9250608087013567ffffffffffffffff8111156103f657600080fd5b61040289828a0161034c565b979a9699509497509295939492505050565b60008060006040848603121561042957600080fd5b83359250602084013567ffffffffffffffff81111561044757600080fd5b6104538682870161034c565b9497909650939450505050565b6001600160a01b0389811682526020820189905287811660408301528681166060830152851660808201527fffffffff00000000000000000000000000000000000000000000000000000000841660a082015260e060c08201819052810182905260006101008385828501376000838501820152601f909301601f191690910190910198975050505050505050565b60006020828403121561050157600080fd5b505191905056fea2646970667358221220d8ac5e325158600d6ac125c1cb6829121d4cd2548e56b1657dd06f0a15c09d7064736f6c634300080f0033";

type DemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Demo__factory extends ContractFactory {
  constructor(...args: DemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    airnodeRrpAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Demo> {
    return super.deploy(airnodeRrpAddress, overrides || {}) as Promise<Demo>;
  }
  override getDeployTransaction(
    airnodeRrpAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(airnodeRrpAddress, overrides || {});
  }
  override attach(address: string): Demo {
    return super.attach(address) as Demo;
  }
  override connect(signer: Signer): Demo__factory {
    return super.connect(signer) as Demo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoInterface {
    return new utils.Interface(_abi) as DemoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Demo {
    return new Contract(address, _abi, signerOrProvider) as Demo;
  }
}
